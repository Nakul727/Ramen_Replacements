{"ast":null,"code":"var _jsxFileName = \"/home/simon/Projects/Ramen_Replacements/Ramen_Replacements/src/components/body.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeCard(rec) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"recipe-pic\",\n      src: \"https://random.dog/b2177027-87a9-4dad-a3b3-811e0ae21ecd.jpg\",\n      alt: \"idk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: rec.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: rec.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = RecipeCard;\nfunction getRecipeData() {\n  async function getData() {\n    try {\n      const response = await fetch(\"http://localhost:8080/recipe/latest\");\n      if (response.ok) {\n        return response.json();\n      } else {\n        const error = await response.json();\n        displayMessage(\"error: \", error.error);\n        return error;\n      }\n    } catch (error) {\n      displayMessage(\"500 internal server error\", \"there was an error contacting the server\");\n      return response.json();\n    }\n  }\n  return getData();\n}\nfunction RenderBody() {}\n_c2 = RenderBody;\nfunction Body() {\n  _s();\n  const [recipeData, setRecipeData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getRecipeData();\n      setRecipeData(data);\n    }\n  }, []);\n  console.log(recipeData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Body, \"ccD50qkFnAhHGdMrS66WQqUxyRQ=\");\n_c3 = Body;\nexport default Body;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RecipeCard\");\n$RefreshReg$(_c2, \"RenderBody\");\n$RefreshReg$(_c3, \"Body\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeCard","rec","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","description","_c","getRecipeData","getData","response","fetch","ok","json","error","displayMessage","RenderBody","_c2","Body","_s","recipeData","setRecipeData","fetchData","data","console","log","_c3","$RefreshReg$"],"sources":["/home/simon/Projects/Ramen_Replacements/Ramen_Replacements/src/components/body.js"],"sourcesContent":["import { useState, useEffect } from 'react' \n\nfunction RecipeCard(rec) {\n    return (\n        <div className=\"recipe-card\">\n            <img className=\"recipe-pic\" src=\"https://random.dog/b2177027-87a9-4dad-a3b3-811e0ae21ecd.jpg\" alt=\"idk\" />\n            <p>{rec.title}</p>\n            <p>{rec.description}</p>\n        </div>\n    )\n}\n\nfunction getRecipeData() {\n    async function getData() {\n        try{\n            const response = await fetch(\"http://localhost:8080/recipe/latest\");\n            if (response.ok) {\n                return response.json();\n            } else {\n                const error = await response.json();\n                displayMessage(\"error: \", error.error);\n                return error;\n            }\n        } catch(error) {\n            displayMessage(\"500 internal server error\", \"there was an error contacting the server\")\n            return response.json();\n        }\n    }\n\n    return getData();\n}\n\nfunction RenderBody() {\n\n}\n\nfunction Body() {\n    const [ recipeData, setRecipeData ] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const data = await getRecipeData();\n            setRecipeData(data); \n        }\n    }, [])\n\n    console.log(recipeData);\n    return(\n        <>\n            <h1>Hello there</h1>\n        </>\n    )\n}\n\nexport default Body;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,UAAUA,CAACC,GAAG,EAAE;EACrB,oBACIJ,OAAA;IAAKK,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBN,OAAA;MAAKK,SAAS,EAAC,YAAY;MAACE,GAAG,EAAC,6DAA6D;MAACC,GAAG,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1GZ,OAAA;MAAAM,QAAA,EAAIF,GAAG,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBZ,OAAA;MAAAM,QAAA,EAAIF,GAAG,CAACU;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd;AAACG,EAAA,GARQZ,UAAU;AAUnB,SAASa,aAAaA,CAAA,EAAG;EACrB,eAAeC,OAAOA,CAAA,EAAG;IACrB,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,IAAID,QAAQ,CAACE,EAAE,EAAE;QACb,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACH,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;QACnCE,cAAc,CAAC,SAAS,EAAED,KAAK,CAACA,KAAK,CAAC;QACtC,OAAOA,KAAK;MAChB;IACJ,CAAC,CAAC,OAAMA,KAAK,EAAE;MACXC,cAAc,CAAC,2BAA2B,EAAE,0CAA0C,CAAC;MACvF,OAAOL,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B;EACJ;EAEA,OAAOJ,OAAO,CAAC,CAAC;AACpB;AAEA,SAASO,UAAUA,CAAA,EAAG,CAEtB;AAACC,GAAA,GAFQD,UAAU;AAInB,SAASE,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,eAAegC,SAASA,CAAA,EAAG;MACvB,MAAMC,IAAI,GAAG,MAAMf,aAAa,CAAC,CAAC;MAClCa,aAAa,CAACE,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;EACvB,oBACI5B,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA;MAAAM,QAAA,EAAI;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACtB,CAAC;AAEX;AAACe,EAAA,CAhBQD,IAAI;AAAAQ,GAAA,GAAJR,IAAI;AAkBb,eAAeA,IAAI;AAAC,IAAAX,EAAA,EAAAU,GAAA,EAAAS,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}